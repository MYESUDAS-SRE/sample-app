name: CI/CD Pipeline for Sample App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      # ------------------ JBoss1 ------------------
      - name: Copy WAR to JBoss1
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.JBOSS1 }}
          username: ec2-user
          key: ${{ secrets.EC2_KEY }}
          source: "target/sample-app.war"
          target: "/tmp/"

      - name: Deploy WAR on JBoss1
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.JBOSS1 }}
          username: ec2-user
          key: ${{ secrets.EC2_KEY }}
          script: |
            if ! pgrep -f "wildfly" > /dev/null; then
              echo "WildFly not running on JBOSS1, starting..."
              nohup /opt/wildfly/bin/standalone.sh -b 0.0.0.0 -bmanagement 0.0.0.0 \
                -Djboss.bind.address.management=0.0.0.0 \
                > /opt/wildfly/standalone/log/server.log 2>&1 &
              sleep 20
            fi
            /opt/wildfly/bin/jboss-cli.sh \
              --connect \
              --controller=127.0.0.1:9990 \
              --user='${{ secrets.WILDFLY_USER }}' \
              --password='${{ secrets.WILDFLY_PASS }}' \
              --command="deploy /tmp/sample-app.war --force"
            curl -f http://localhost:8080/sample-app/ || exit 1

      # ------------------ JBoss2 ------------------
      - name: Copy WAR to JBoss2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.JBOSS2 }}
          username: ec2-user
          key: ${{ secrets.EC2_KEY }}
          source: "target/sample-app.war"
          target: "/tmp/"

      - name: Deploy WAR on JBoss2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.JBOSS2 }}
          username: ec2-user
          key: ${{ secrets.EC2_KEY }}
          script: |
            if ! pgrep -f "wildfly" > /dev/null; then
              echo "WildFly not running on JBOSS2, starting..."
              nohup /opt/wildfly/bin/standalone.sh -b 0.0.0.0 -bmanagement 0.0.0.0 \
                -Djboss.bind.address.management=0.0.0.0 \
                > /opt/wildfly/standalone/log/server.log 2>&1 &
              sleep 20
            fi
            /opt/wildfly/bin/jboss-cli.sh \
              --connect \
              --controller=127.0.0.1:9990 \
              --user='${{ secrets.WILDFLY_USER }}' \
              --password='${{ secrets.WILDFLY_PASS }}' \
              --command="deploy /tmp/sample-app.war --force"
            curl -f http://localhost:8080/sample-app/ || exit 1
