name: CI/CD Sample App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Build WAR
        run: mvn clean package -DskipTests

      # ---------------- jboss1 ----------------
      - name: Copy WAR to jboss1
        uses: appleboy/scp-action@v0.1.4  # Using a known working version
        with:
          host: ${{ secrets.JBOSS1 }}
          username: ec2-user
          key: ${{ secrets.EC2_KEY }}
          source: "target/sample-app.war"
          target: "/tmp/"

      - name: Deploy WAR on jboss1
        uses: appleboy/ssh-action@v0.1.4  # Using a known working version
        with:
          host: ${{ secrets.JBOSS1 }}
          username: ec2-user
          key: ${{ secrets.EC2_KEY }}
          script: |
            # Check if WildFly is running
            if ! pgrep -f "wildfly" > /dev/null; then
              echo "WildFly not running on JBOSS1, starting as wildfly user..."
              # Use sudo -u wildfly to start WildFly as the wildfly user
              sudo -u wildfly nohup /opt/wildfly/bin/standalone.sh \
                -b 0.0.0.0 \
                -bmanagement 0.0.0.0 \
                -Djboss.bind.address.management=0.0.0.0 \
                > /opt/wildfly/wildfly.log 2>&1 &
              sleep 20 # Give WildFly time to start
            else
              echo "WildFly is already running on JBOSS1."
            fi

            echo "Deploying WAR file to jboss1..."
            # Run jboss-cli as the wildfly user to deploy
            sudo -u wildfly /opt/wildfly/bin/jboss-cli.sh \
              --connect \
              --controller=127.0.0.1:9990 \
              --user=${{ secrets.WILDFLY_USER }} \
              --password=${{ secrets.WILDFLY_PASS }} \
              --command="deploy /tmp/sample-app.war --force"

            echo "Verifying deployment on jboss1..."
            curl -f http://localhost:8080/sample-app/ || exit 1
            echo "Deployment successful on jboss1."

      # ---------------- jboss2 ----------------
      - name: Copy WAR to jboss2
        uses: appleboy/scp-action@v0.1.4  # Using a known working version
        with:
          host: ${{ secrets.JBOSS2 }}
          username: ec2-user
          key: ${{ secrets.EC2_KEY }}
          source: "target/sample-app.war"
          target: "/tmp/"

      - name: Deploy WAR on jboss2
        uses: appleboy/ssh-action@v0.1.4  # Using a known working version
        with:
          host: ${{ secrets.JBOSS2 }}
          username: ec2-user
          key: ${{ secrets.EC2_KEY }}
          script: |
            # Check if WildFly is running
            if ! pgrep -f "wildfly" > /dev/null; then
              echo "WildFly not running on JBOSS2, starting as wildfly user..."
              # Use sudo -u wildfly to start WildFly as the wildfly user
              sudo -u wildfly nohup /opt/wildfly/bin/standalone.sh \
                -b 0.0.0.0 \
                -bmanagement 0.0.0.0 \
                -Djboss.bind.address.management=0.0.0.0 \
                > /opt/wildfly/wildfly.log 2>&1 &
              sleep 20 # Give WildFly time to start
            else
              echo "WildFly is already running on JBOSS2."
            fi

            echo "Deploying WAR file to jboss2..."
            # Run jboss-cli as the wildfly user to deploy
            sudo -u wildfly /opt/wildfly/bin/jboss-cli.sh \
              --connect \
              --controller=127.0.0.1:9990 \
              --user=${{ secrets.WILDFLY_USER }} \
              --password=${{ secrets.WILDFLY_PASS }} \
              --command="deploy /tmp/sample-app.war --force"

            echo "Verifying deployment on jboss2..."
            curl -f http://localhost:8080/sample-app/ || exit 1
            echo "Deployment successful on jboss2."
